services:
  postgres:
    container_name: segoya-postgres
    image: postgres:17-alpine3.21
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASS}
      POSTGRES_DB: ${PG_DB}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${PG_USER} -d ${PG_DB}'"]
    volumes:
      - "postgres-data:/var/lib/postgresql/data"
    networks:
      - segoya-backend-network

  postgres-migrations:
    container_name: segoya-postgres-migrations
    build:
      context: ./
      dockerfile: ./migrations/Dockerfile
    environment:
      PG_USER: ${PG_USER}
      PG_PASS: ${PG_PASS}
      PG_HOST: postgres
      PG_DB: ${PG_DB}
    command: ["up-with-data"]
    restart: "no"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - segoya-backend-network

  valkey:
    container_name: segoya-valkey
    image: valkey/valkey:8.0.2
    ports:
      - "6379:6379"
    command: "valkey-server --save 30 1 --loglevel warning"
    healthcheck:
      test: ["CMD", "valkey-cli", "ping"]
    volumes:
      - "valkey-data:/data"
    networks:
      - segoya-backend-network

  jaeger:
    container_name: segoya-jaeger
    image: jaegertracing/jaeger:2.4.0
    ports:
      - "4317:4317"
      - "4318:4318"
      - "5778:5778"
      - "9411:9411"
      # - "14269:14269"
      - "16686:16686"
    # healthcheck:
    # test: ["CMD-SHELL", "nc -z localhost 14269"]
    networks:
      - segoya-backend-network

  segoya-backend:
    container_name: segoya-backend
    build: .
    ports:
      - "4174:4174"
    environment:
      BACKEND_URL: ${BACKEND_URL}
      FRONTEND_URL: ${FRONTEND_URL}
      VALKEY_URL: valkey://valkey:6379
      JAEGER_URL: http://jaeger:4318
      ENV_MODE: development
      PG_USER: ${PG_USER}
      PG_PASS: ${PG_PASS}
      PG_HOST: postgres
      PG_DB: ${PG_DB}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4174/health"]
    networks:
      - segoya-backend-network
    depends_on:
      postgres:
        condition: service_healthy
      postgres-migrations:
        condition: service_completed_successfully
      valkey:
        condition: service_healthy
      jaeger:
        condition: service_started

networks:
  segoya-backend-network:

volumes:
  postgres-data:
    driver: local
  valkey-data:
    driver: local
